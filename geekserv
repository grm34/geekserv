#!/bin/bash
__appname__="geekserv"
__version__="v1.0"
__author__="@grm34"
__date__="October 2016"
__license__="Apache License v2.0"

# Colors
red="\e[1;31m"
green="\e[1;32m"
yellow="\e[1;33m"
blue="\e[1;34m"
pink="\e[1;35m"
cyan="\e[1;36m"
nc="\e[0m"

# Regex
valid_char='^[a-z0-9_]{3,15}$'
valid_mail='[a-z0-9]+[\.a-z0-9\-]*@[a-z0-9]+[\.a-z0-9\-]*'
valid_port=\
'^([1-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}
|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$'
valid_domain=\
'^(([a-zA-Z](-?[a-zA-Z0-9])*)\.)*[a-zA-Z](-?[a-zA-Z0-9])+\.[a-zA-Z]{2,}$'

_banner() {
    echo -e "\n" >&2
    echo -e "$red        ...$__appname__ $__version__...   $nc" >&2
    echo -e "$red      _______________________ $nc" >&2
}

_prompt() {
    echo -e "\n$yellow==> $green$1 $nc" >&2
    echo -e "$yellow==> ------------------------------------ $nc" >&2
    echo -ne "$yellow==> $nc" >&2
}

_warning() {
    echo -e "\n$green==> $red$1 $cyan[ENTER]$nc" >&2
    read -s warning
}

_logs() {
    datetime=`date '+%d-%m-%Y_%Hh%Mm%Ss'`
    LOGFILE="/var/log/geekserv/install_$datetime.log"
    if [ ! -d "/var/log/geekserv" ]; then
        mkdir /var/log/geekserv
    fi
}

_user_settings() {
    until [[ $USER_name =~ $valid_char ]]; do
        _prompt "Enter SSH Username (ex: johnny):"
        read USER_name
    done
    until [[ $USER_mail =~ $valid_mail ]]; do
        _prompt "Enter your email:"
        read USER_mail
    done
    until [[ $SSH_port =~ $valid_port ]]; do
        _prompt "Enter SSH Port (1 to 65535):"
        read SSH_port
    done
    until [[ $SERVER_name =~ $valid_domain ]]; do
        _prompt "Enter Domain name (ex: google.com):"
        read SERVER_name
    done
    until [[ $DRUPAL_folder =~ $valid_char ]]; do
        _prompt "Enter Drupal site name (ex: site1):"
        read DRUPAL_folder
    done
    until [[ ${#i} -ge 6 && "$i" == *[a-z]* && "$i" == *[0-9]* ]]; do
    echo -e "$cyan\n NOTE: password should be at least 6 chars $nc"
    echo -e "$cyan NOTE: long with one letter and one digit! $nc"
    _prompt "MYSQL password for ${USER_name}:"
    read -s i
    done
    _prompt "Confirm mysql password for ${USER_name}:"
    read -s DB_passwd
    if [[ ${DB_passwd} != ${i} ]]; then
        echo -e "$red \n==> Passwords does not match! $nc"
        exit
    fi
    echo
    until [[ $SSL_mod == "1" || $SSL_mod == "2" ]]; do
        _prompt \
        "SSL Default = [${red}1${green}] | StartSSL = [${red}2${green}]:"
        read SSL_mod
    done
    if [ ! -f "/etc/hostname" ]; then
        echo ${SERVER_name%.*} > /etc/hostname
    fi
}

_ssh_config() {
    echo && echo -e "$cyan==> Adding SSH user... $nc" && sleep 2s
    adduser $USER_name
    echo && echo -e "$cyan==> Secure SSH... $nc" && sleep 2s
    sed -i -e "s/Port 22/Port ${SSH_port}/g" /etc/ssh/sshd_config
    sed -i -e "s/PermitRootLogin yes/PermitRootLogin no/g" \
    /etc/ssh/sshd_config
    sed -i -e "s/Subsystem sftp \/usr\/lib/#Subsystem sftp \/usr\/lib/g" \
    /etc/ssh/sshd_config
    echo "Subsystem sftp internal-sftp" >> /etc/ssh/sshd_config
    echo "AllowUsers ${USER_name}" >> /etc/ssh/sshd_config
    systemctl restart ssh
}

_sources_list() {
    echo && echo -e "$cyan==> Adding sources list... $nc" && sleep 2s
    echo "#Depots paquets proprietaires" \
    > /etc/apt/sources.list.d/non-free.list
    echo "deb http://ftp2.fr.debian.org/debian/ jessie main non-free" \
    >> /etc/apt/sources.list.d/non-free.list
    echo "deb-src http://ftp2.fr.debian.org/debian/ jessie main non-free" \
    >> /etc/apt/sources.list.d/non-free.list
    echo "#Depots Dotdeb" > /etc/apt/sources.list.d/dotdeb.list
    echo "deb http://packages.dotdeb.org jessie all" \
    >> /etc/apt/sources.list.d/dotdeb.list
    echo "deb-src http://packages.dotdeb.org jessie all" \
    >> /etc/apt/sources.list.d/dotdeb.list
    echo "#Depots Multimedia" > /etc/apt/sources.list.d/multimedia.list
    echo "deb http://www.deb-multimedia.org jessie main non-free" \
    >> /etc/apt/sources.list.d/multimedia.list
}

_required_packages() {
    echo && echo -e "$cyan==> Installing packages... $nc" && sleep 2s
    apt-get install curl
    cd /tmp && curl http://www.dotdeb.org/dotdeb.gpg | apt-key add -
    apt-get update
    apt-get install -y --force-yes deb-multimedia-keyring aptitude
    aptitude update && aptitude safe-upgrade --assume-yes
    aptitude install --assume-yes \
    htop automake libcppunit-dev libtool build-essential pkg-config \
    libssl-dev libcurl4-openssl-dev libsigc++-2.0-dev libncurses5-dev \
    vim screen subversion php7.0 php7.0-mysql php7.0-mcrypt php7.0-curl \
    php7.0-gd libapache2-mod-php7.0 php7.0-mbstring php7.0-xml php7.0-cli \
    php7.0-fpm php7.0-geoip php7.0-apcu git unzip unrar rar zip ffmpeg \
    buildtorrent mediainfo apache2 mariadb-client mariadb-server \
    phpmyadmin php-gettext php7.0-dev sudo postfix mailutils fail2ban \
    logwatch portsentry libapache2-mod-scgi inxi
}

_php7_config() {
    echo && echo -e "$cyan==> Configuring php7.0... $nc" && sleep 2s
    echo "ServerName ${SERVER_name}" >> /etc/apache2/apache2.conf
    echo "date.timezone = Europe/Paris" >> /etc/php/7.0/apache2/php.ini
    echo "date.timezone = Europe/Paris" >>  /etc/php/7.0/fpm/php.ini
    echo "date.timezone = Europe/Paris" >>  /etc/php/7.0/cli/php.ini
    sed -i -e "s/upload_max_filesize = 2M/upload_max_filesize = 10M/g" \
    /etc/php/7.0/apache2/php.ini
    sed -i -e "s/upload_max_filesize = 2M/upload_max_filesize = 10M/g" \
    /etc/php/7.0/fpm/php.ini
    sed -i -e "s/upload_max_filesize = 2M/upload_max_filesize = 10M/g" \
    /etc/php/7.0/cli/php.ini
    sed -i -e "s/= 128M/= 256M/g" /etc/php/7.0/apache2/php.ini
    sed -i -e "s/= 128M/= 256M/g" /etc/php/7.0/fpm/php.ini
    cd /tmp/ && git clone https://github.com/Jan-E/uploadprogress
    cd uploadprogress && phpize
    ./configure && make && sudo make install
    echo "extension=uploadprogress.so" \
    >> /etc/php/7.0/mods-available/uploadprogress.ini
    sudo phpenmod uploadprogress
}

_apache2_config() {
    echo && echo -e "$cyan==> Configuring Apache2... $nc" && sleep 2s
    SERVER_ip="$(wget http://ipinfo.io/ip -qO -)"
    a2enmod proxy_fcgi setenvif rewrite ssl auth_digest
    a2enconf php7.0-fpm
    if [[ $SSL_mod == "2" ]]; then
        if [ ! -d "/home/${USER_name}/ssl" ]; then
            mkdir /home/$USER_name/ssl
        fi
        ln -s /home/$USER_name/ssl /etc/apache2/ssl
        cd /tmp/geekserv
        sed -i -e "s/SERVERNAME/${SERVER_name}/g" a2-startssl.conf
        sed -i -e "s/DRUPAL-FOLDER/${DRUPAL_folder}/g" a2-startssl.conf
        sed -i -e "s/SERVER-IP/${SERVER_ip}/g" a2-startssl.conf
        sed -i -e "s/SERVER-TITLE/${SERVER_name%.*}/g" a2-startssl.conf
        cp a2-startssl.conf \
        /etc/apache2/sites-available/${SERVER_name%.*}-ssl.conf
    else
        echo && echo -e "$cyan==> Creating SSL Certificate... $nc" && sleep 2s
        if [ ! -d "/etc/apache2/ssl" ]; then
            mkdir /etc/apache2/ssl
        fi
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout \
        /etc/apache2/ssl/server.key -out /etc/apache2/ssl/server.crt
        cd /tmp/geekserv
        sed -i -e "s/SERVERNAME/${SERVER_name}/g" a2-ssl.conf
        sed -i -e "s/DRUPAL-FOLDER/${DRUPAL_folder}/g" a2-ssl.conf
        sed -i -e "s/SERVER-IP/${SERVER_ip}/g" a2-ssl.conf
        cp a2-ssl.conf /etc/apache2/sites-available/${SERVER_name%.*}-ssl.conf
    fi
    chmod 600 /etc/apache2/ssl/*
    cd /tmp/geekserv
    sed -i -e "s/SERVERNAME/${SERVER_name}/g" a2.conf
    sed -i -e "s/DRUPAL-FOLDER/${DRUPAL_folder}/g" a2.conf
    sed -i -e "s/SERVER-IP/${SERVER_ip}/g" a2.conf
    cp a2.conf /etc/apache2/sites-available/${SERVER_name%.*}.conf
    a2dissite 000-default
    a2ensite ${SERVER_name%.*} && a2ensite ${SERVER_name%.*}-ssl
}

_drupal_database() {
    echo && echo -e "$cyan==> Secure MariaDB... $nc" && sleep 2s
    mysql_secure_installation
    echo && echo -e "$cyan==> Creating DRUPAL Database... $nc" && sleep 2s
    echo -e "NOTE: Enter MYSQL password for root bellow. $nc"
    mysql -uroot -p <<EOF
    CREATE DATABASE ${DRUPAL_folder};
    CREATE USER '${USER_name}'@'localhost' IDENTIFIED BY '${DB_passwd}';
    GRANT ALL PRIVILEGES ON ${DRUPAL_folder}.* TO '${USER_name}'@'localhost';
    FLUSH PRIVILEGES;
EOF
}

_drupal_install() {
    echo && echo -e "$cyan==> Installing Drupal 8... $nc" && sleep 2s
    if [ ! -d "/home/${USER_name}/${DRUPAL_folder}" ]; then
        mkdir /home/$USER_name/$DRUPAL_folder
    fi
    cd /home/$USER_name/$DRUPAL_folder
    wget https://ftp.drupal.org/files/projects/drupal-8.2.2.tar.gz
    tar --strip-components=1 -xvzf drupal-8.2.2.tar.gz
    rm drupal-8.2.2.tar.gz
    if \
    [ ! -d "/home/${USER_name}/${DRUPAL_folder}/sites/default/files" ]; then
        mkdir /home/$USER_name/$DRUPAL_folder/sites/default/files
    fi
    chmod o+w /home/$USER_name/$DRUPAL_folder/sites/default/files
    cp /home/$USER_name/$DRUPAL_folder/sites/default/default.settings.php \
    /home/$USER_name/$DRUPAL_folder/sites/default/settings.php
    chmod o+w /home/$USER_name/$DRUPAL_folder/sites/default/settings.php
    ln -s /home/$USER_name/$DRUPAL_folder/ /var/www/$DRUPAL_folder
}

_drupal_config() {
    echo && echo -e "$cyan==> Secure Drupal 8... $nc" && sleep 2s
    echo "\$settings['trusted_host_patterns'] = array(" \
    >> /home/$USER_name/$DRUPAL_folder/sites/default/settings.php
    echo "'^${SERVER_name%.*}\.${SERVER_name##*.}$'," \
    >> /home/$USER_name/$DRUPAL_folder/sites/default/settings.php
    echo "'^www\.${SERVER_name%.*}\.${SERVER_name##*.}$'," \
    >> /home/$USER_name/$DRUPAL_folder/sites/default/settings.php
    echo ");" \
    >> /home/$USER_name/$DRUPAL_folder/sites/default/settings.php
    chown -R $USER_name:$USER_name /home/$USER_name
    chmod 555 /home/$USER_name/$DRUPAL_folder/
    chown -R www-data:www-data \
    /home/$USER_name/$DRUPAL_folder/sites/default/files
    chmod 755 /home/$USER_name/$DRUPAL_folder/sites/default/files
    chmod 444 /home/$USER_name/$DRUPAL_folder/sites/default/settings.php
    echo && echo -e "$cyan==> Install Adaptive Theme... $nc" && sleep 2s
    cd /home/$USER_name/$DRUPAL_folder/themes/
    wget https://ftp.drupal.org/files/projects/adaptivetheme-8.x-1.0-rc2.tar.gz
    tar -xvzf adaptivetheme-8.x-1.0-rc2.tar.gz
    rm adaptivetheme-8.x-1.0-rc2.tar.gz
    cd /home/$USER_name/$DRUPAL_folder/modules/
    wget https://ftp.drupal.org/files/projects/at_tools-8.x-1.0-rc2.tar.gz
    tar -xvzf at_tools-8.x-1.0-rc2.tar.gz
    rm at_tools-8.x-1.0-rc2.tar.gz
}

_rutorrent_install() {
    echo && echo -e "$cyan==> Installing ruTorrent... $nc" && sleep 2s
    cd /tmp
    svn checkout http://svn.code.sf.net/p/xmlrpc-c/code/stable xmlrpc-c
    cd xmlrpc-c/ && ./configure && make && make install
    cd /tmp
    git clone https://github.com/rakshasa/libtorrent.git
    cd libtorrent && git checkout 0.13.6 && ./autogen.sh
    ./configure && make && make install
    cd /tmp
    git clone https://github.com/rakshasa/rtorrent.git
    cd rtorrent && git checkout 0.9.6 && ./autogen.sh
    ./configure --with-xmlrpc-c && make && make install
    ldconfig
    cd /var/www
    git clone https://github.com/Novik/ruTorrent.git rutorrent
    cd /var/www/rutorrent/plugins/
    wget \
    https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/rutorrent-logoff/logoff-1.3.tar.gz
    tar xzfv  logoff-1.3.tar.gz
    cd /var/www/rutorrent/plugins/
    wget \
    https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/rutorrent-pausewebui/pausewebui.1.2.zip
    unzip pausewebui.1.2.zip
    rm -R  __MACOSX logoff-1.3.tar.gz pausewebui.1.2.zip
    cd /var/www/rutorrent/plugins/
    git clone https://github.com/xombiemp/rutorrentMobile.git mobile
    cd /var/www/rutorrent/plugins/
    git clone https://github.com/exrat/filemanager
    sed -i -e "s/useExternal = false/useExternal = 'buildtorrent'/g" \
    /var/www/rutorrent/plugins/create/conf.php
    sed -i -e "s/atetorrent = ''/atetorrent = '\/usr\/bin\/buildtorrent'/g" \
    /var/www/rutorrent/plugins/create/conf.php
    sed -i -e "s/ternals['rar'] = ''/ternals['rar'] = '\/usr\/bin\/rar'/g" \
    /var/www/rutorrent/plugins/filemanager/conf.php
    sed -i -e "s/ternals['zip'] = ''/ternals['zip'] = '\/usr\/bin\/zip'/g" \
    /var/www/rutorrent/plugins/filemanager/conf.php
    sed -i -e \
    "s/ternals['unzip'] = ''/ternals['unzip'] = '\/usr\/bin\/unzip'/g" \
    /var/www/rutorrent/plugins/filemanager/conf.php
    sed -i -e "s/ternals['tar'] = ''/ternals['tar'] = '\/bin\/tar'/g" \
    /var/www/rutorrent/plugins/filemanager/conf.php
    sed -i -e "s/ternals['gzip'] = ''/ternals['gzip'] = '\/bin\/gzip'/g" \
    /var/www/rutorrent/plugins/filemanager/conf.php
    sed -i -e "s/ternals['bzip2'] = ''/ternals['bzip2'] = '\/bin\/bzip2'/g" \
    /var/www/rutorrent/plugins/filemanager/conf.php
    if [ ! -d "/home/${USER_name}/{torrents,watch,.session}" ]; then
        mkdir --parents /home/$USER_name/{torrents,watch,.session}
    fi
    cd /tmp/geekserv
    sed -i -e "s/USERNAME/${USER_name}/g" rtorrent.rc
    cp rtorrent.rc /home/$USER_name/.rtorrent.rc
    chown --recursive $USER_name:$USER_name /home/$USER_name
    chown root:root /home/$USER_name
    chmod 755 /home/$USER_name
    if [ ! -d "/var/www/rutorrent/conf/users/${USER_name}" ]; then
        mkdir /var/www/rutorrent/conf/users/$USER_name
    fi
    echo "<?php" \
    > /var/www/rutorrent/conf/users/$USER_name/config.php
    echo "\$pathToExternals['curl'] = '/usr/bin/curl';" \
    >> /var/www/rutorrent/conf/users/$USER_name/config.php
    echo "\$topDirectory = '/home/${USER_name}/torrents';" \
    >> /var/www/rutorrent/conf/users/$USER_name/config.php
    echo "\$scgi_port = 5001;" \
    >> /var/www/rutorrent/conf/users/$USER_name/config.php
    echo "\$scgi_host = '127.0.0.1';" \
    >> /var/www/rutorrent/conf/users/$USER_name/config.php
    echo "\$XMLRPCMountPoint = '/${USER_name^^}';" \
    >> /var/www/rutorrent/conf/users/$USER_name/config.php
    cd /tmp/geekserv
    cp plugins.ini /var/www/rutorrent/conf/users/$USER_name/plugins.ini
    sed -i -e "s/USERNAME/${USER_name}/g" rtorrent
    cp rtorrent /etc/init.d/$USER_name-rtorrent
    chmod +x /etc/init.d/$USER_name-rtorrent
    update-rc.d $USER_name-rtorrent defaults
    chown -R www-data:www-data /var/www/rutorrent/
    echo "SCGIMount /GRMIX 127.0.0.1:5001" >> /etc/apache2/apache2.conf
    echo && echo -e "$cyan==> Creating ruTorrent password... $nc" && sleep 2s
    if [ ! -d "/etc/apache2/passwords" ]; then
        mkdir /etc/apache2/passwords
    fi
    htdigest -c /etc/apache2/passwords/rutorrent-passwd PRIVATE $USER_name
    chmod 640 /etc/apache2/passwords/*
    chown --changes www-data:www-data /etc/apache2/passwords/*
}

_postfix_config() {
    echo && echo -e "$cyan==> Configuring Postfix... $nc" && sleep 2s
    rm /etc/aliases && echo "root: ${USER_mail}" > /etc/aliases
    newaliases
    x=`sed -n '/smtpd/=' /etc/postfix/master.cf | cut -d: -f 1`
    y=`echo ${x} | awk -F' ' '{print $1}'`
    sed -i "${y}s/smtp/#smtp/" /etc/postfix/master.cf
    echo "inet_protocols=ipv4" >> /etc/postfix/main.cf
    echo "echo 'Acces Shell Root le ' \`date\` \`who\` | mail -s '${HOSTNAME} - Connexion Server via root' root" \
    >> /root/.bashrc
}

_logwatch_config() {
    echo && echo -e "$cyan==> Configuring Logwatch... $nc" && sleep 2s
    sed -i -e "s/Output =/#Output =/g" \
    /usr/share/logwatch/default.conf/logwatch.conf
    sed -i -e "s/MailTo =/#MailTo =/g" \
    /usr/share/logwatch/default.conf/logwatch.conf
    echo "Output = mail" \
    >> /usr/share/logwatch/default.conf/logwatch.conf
    echo "MailTo = root" \
    >> /usr/share/logwatch/default.conf/logwatch.conf
}

_fail2ban_config() {
    echo && echo -e "$cyan==> Configuring Fail2ban... $nc" && sleep 2s
    CLIENT_ip=$(echo $SSH_CONNECTION | awk '{print $1}')
    cd /tmp/geekserv/
    sed -i -e "s/CLIENT-IP/${CLIENT_ip}/g" jail.conf
    sed -i -e "s/SSH-PORT/${SSH_port}/g" jail.conf
    cp jail.conf /etc/fail2ban/jail.local
}

_portsentry_config() {
    echo && echo -e "$cyan==> Configuring Portsentry... $nc" && sleep 2s
    echo $SERVER_ip >> /etc/portsentry/portsentry.ignore.static
    echo $CLIENT_ip >> /etc/portsentry/portsentry.ignore.static
    echo "66.249.64.0/19" >> /etc/portsentry/portsentry.ignore.static
    sed -i -e 's/BLOCK_UDP="0"/BLOCK_UDP="1"/g' \
    /etc/portsentry/portsentry.conf
    sed -i -e 's/BLOCK_TCP="0"/BLOCK_TCP="1"/g' \
    /etc/portsentry/portsentry.conf
    sed -i -e 's/SCAN_TRIGGER="0"/SCAN_TRIGGER="1"/g' \
    /etc/portsentry/portsentry.conf
    sed -i -e 's/TCP_MODE="tcp"/TCP_MODE="atcp"/g' /etc/default/portsentry
    sed -i -e 's/UDP_MODE="udp"/UDP_MODE="audp"/g' /etc/default/portsentry
    echo \
    'KILL_RUN_CMD="/sbin/iptables -I INPUT -s $TARGET$ -j DROP && " \
    "/sbin/iptables -I INPUT -s $TARGET$ -m limit --limit 3/minute " \
    "--limit-burst 5 -j LOG --log-level debug "' \
    >> /etc/portsentry/portsentry.conf
    echo 'KILL_RUN_CMD_FIRST = "1"' >> /etc/portsentry/portsentry.conf
}

_restart_services() {
    echo && echo -e "$cyan==> Restarting services... $nc" && sleep 2s
    systemctl restart apache2 php7.0-fpm mysql postfix fail2ban portsentry
    service $USER_name-rtorrent restart && logwatch restart
}

# Run geekserv
_banner && _user_settings && _logs && _ssh_config
if id $USER_name >/dev/null 2>&1; then

    # Install
    _warning "System ready! Run geekserc install?"
    (_sources_list && _required_packages && _php7_config && \
    _apache2_config && _drupal_database && _drupal_install && \
    _rutorrent_install && _postfix_config && _logwatch_config && \
    _fail2ban_config && _portsentry_config && _restart_services) \
    2>&1 | tee -a $LOGFILE

    # StartSSL
    if [[ $SSL_mod == "2" ]]; then
        echo && echo "NOTE: Apache2 fails to start and it's not an error."
        echo "NOTE: Your StartSSL certificates are missing."
        echo "NOTE: Copy ${SERVER_name%.*}.crt and ${SERVER_name%.*}.key"
        echo "NOTE: to /home/${USER_name}/ssl/ before next step."
        _warning "Waiting for SSL Certificates!"
        chmod 600 /etc/apache2/ssl/* && _restart_services
    fi

    # Drupal
    echo && echo "NOTE: Before next step you need to finish"
    echo "NOTE: the installation of Drupal 8 online:"
    echo "NOTE: https://${SERVER_name}"
    _warning "Secure & configure Drupal 8?"
    _drupal_config

    # Log
    echo && echo "NOTE: Installation finished. No error reported."
    echo "NOTE: View full logfile: /var/log/server_install/"

else
    echo "ERROR: ssh user does not exist, please try again!"
    exit
fi

_warning "$__appname__ $__version__ by $__author__ - $__license__"
